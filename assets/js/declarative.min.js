/*

 declarative - Mapper for custom user interface markup - version 1.3.8
 Copyright 2012, Alex Lawrence
 Licensed under the MIT license.
 http://www.opensource.org/licenses/MIT
*/
(function(g,k){"object"===typeof exports?module.exports=k():"function"===typeof define&&define.amd?define(k):g.declarative=k()})(this,function(){var g={attribute:"attribute",element:"element"},k,c={},L=RegExp(/([A-Z])/g);k=c=function(a){return a.replace(L,function(a,d){return"-"+d.toLowerCase()})};var A,c={},n=function(a){throw Error(a);};A=c=function(a){a||n("declarative: Invalid mapping options");a.id||n("declarative: Invalid mapping id");a.types||n("declarative: Missing mapping types");a.types&&
!a.types.push&&n("declarative: Invalid mapping types");(!a.callback||"function"!==typeof a.callback)&&n("declarative: Invalid mapping callback");a.mappingMode&&(a.mappingMode!==g.attribute&&a.mappingMode!==g.element)&&n("declarative: Invalid mappingMode")};var B,c={};B=c=function(a){a.prefix=a.prefix||"";a.mappingMode=a.mappingMode||g.attribute;a.distinct=void 0!==a.distinct?a.distinct:!0};var C,c={};C=c=function(a){a.prefix=a.prefix.toLowerCase();a.convertedTypes=[];for(var b=0,d=a.types.length;b<
d;b++){var f=k(a.types[b]);a.convertedTypes.push(a.prefix+f)}};var u,D={ensureArray:function(a){return D.isArray(a)?a:[a]},isArray:function(a){return"[object Array]"===Object.prototype.toString.call(a)},indexOf:function(a,b){for(var d=0,f=a.length;d<f;d++)if(a[d]==b)return d;return-1}};u=D;var w,c={};w=c=function(a){return a&&(1===a.nodeType||9===a.nodeType)};var E,c={};E=c=function(a){var b;(b=a[g.attribute].join("],["))&&(b="["+b+"]");a=a[g.element].join(",");return b+(b&&a?",":"")+a};var r,c={},
F=function(){throw Error("declarative: Mapping id not existing");},e={};r=c={clear:function(){e={}},add:function(a){a=u.ensureArray(a);for(var b=0,d=a.length;b<d;b++){var f=a[b];A(f);B(f);C(f);e[f.id]=f}},getAll:function(){var a=[],b;for(b in e)e.hasOwnProperty(b)&&a.push(e[b]);return a},get:function(a){if(!u.isArray(a))return e[a]||F();for(var b=[],d=0,f=a.length;d<f;d++)b.push(e[a[d]]||F());return b}};var x={mappingTimeoutMs:1E3,mappingWaitTimeMs:20},M=function(a){a.exports=function(a){try{return eval("output = {"+
a+"}")}catch(d){throw Error("declarative: Error parsing options");}};return a.exports}({exports:{}}),G,c={};G=c=function(a){var b,d=function(){b=(new Date).getTime();a(f,c)},f=function(){return(new Date).getTime()-b},c=function(a){setTimeout(d,a)};d()};var H,s=function(){if(!(this instanceof s))return new s;var a=null,b,d,f=[],c=[];this.then=function(g,h){var p=new s;h=h||function(){};var e=this,q=g||function(){};g=function(){try{p.resolve(q.apply(e,arguments))}catch(a){p.reject(a)}};"resolved"==
a&&g.apply(this,b);"rejected"==a&&h.apply(this,d);f.push(g);c.push(h);return p};this.resolve=function(){a||(b=arguments,I(this,f,b),a="resolved")};this.reject=function(){a||(d=arguments,I(this,c,d),a="rejected")}},I=function(a,b,d){for(var f=0,c=b.length;f<c;f++)b[f].apply(a,d)};H=s;var J,c={};J=c=function(a){if(!w(a))throw Error("declarative: Invalid DOM element given");a=a.attributes;for(var b,d={},c=0,g=a.length;c<g;c++)b=a[c],b.specified&&(d[b.nodeName]=b.nodeValue);return d};var c={},c=function(a,
b){var d;if(a.querySelectorAll){d={};d[g.attribute]=[];d[g.element]=[];for(var c=0,N=b.length;c<N;c++){var e=b[c],h=e.mappingMode;d[h]=d[h].concat(e.convertedTypes)}d=E(d);d=a.querySelectorAll(d)}else d=a.all?a.all:a.getElementsByTagName("*");return d},y,O={},P=c,K=function(a,b,d){b.distinct&&(b=a.getAttribute(z),b||(b=Q++,a.setAttribute(z,b)),v[b]=v[b]||[],v[b].push(d))},v={},z="data-declarative-id",Q=1;y=O=function(a){a=r.get(a);var b=a=u.ensureArray(a);return{to:function(a){if(!w(a))throw Error("declarative: Invalid DOM element given");
var c=P(a,b),e,k=c.length,h=a!=document?a:c[--k],p=0,n=b.length,q=0,r=0,s=new H;G(function(a,d){for(;h;){for(p=0;p<n;p++){e=b[p];q=0;for(r=e.convertedTypes.length;q<r;q++){var l=e,j=e.convertedTypes[q],m=h.getAttribute(z);if(!l.distinct||!(0<m&&-1<u.indexOf(v[m],j))){if(e.mappingMode===g.attribute){var l=h,j=e,m=q,t=l.getAttributeNode(j.convertedTypes[m]);t&&t.specified&&(t=M(t.nodeValue),j.callback(l,j.types[m],t),K(l,j,j.convertedTypes[m]))}e.mappingMode===g.element&&(l=h,j=e,m=q,l.nodeName.toLowerCase()==
j.convertedTypes[m]&&(t=J(l),j.callback(l,j.types[m],t),K(l,j,j.convertedTypes[m])))}}}h=k&&c[--k];if(a()>x.mappingTimeoutMs){d(x.mappingWaitTimeMs);return}}s.resolve()});return s}}};c={};c.mappingModes=g;c.mappings=r;c.applyAllMappings=function(){for(var a=[],b=r.getAll(),d=0,c=b.length;d<c;d++)a.push(b[d].id);return y(a)};c.settings=x;c.apply=y;return c});
